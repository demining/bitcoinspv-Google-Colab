//
//  WSBlockTests.m
//  BitcoinSPV
//
//  Created by Davide De Rosa on 02/07/14.
//  Copyright (c) 2014 Davide De Rosa. All rights reserved.
//
//  https://github.com/keeshux
//
//  This file is part of BitcoinSPV.
//
//  BitcoinSPV is free software: you can redistribute it and/or modify
//  it under the terms of the GNU General Public License as published by
//  the Free Software Foundation, either version 3 of the License, or
//  (at your option) any later version.
//
//  BitcoinSPV is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU General Public License for more details.
//
//  You should have received a copy of the GNU General Public License
//  along with BitcoinSPV.  If not, see <http://www.gnu.org/licenses/>.
//

#import "XCTestCase+BitcoinSPV.h"
#import "WSBlock.h"
#import "WSFilteredBlock.h"
#import "WSPartialMerkleTree.h"
#import "WSMessageHeaders.h"

@interface WSStorableBlock ()

- (BOOL)validateTargetFromPreviousBlock:(WSStorableBlock *)previousBlock retargetBlock:(WSStorableBlock *)retargetBlock error:(NSError **)error;

@end

@interface WSBlockTests : XCTestCase

@end

@implementation WSBlockTests

- (void)setUp
{
    [super setUp];

    self.networkType = WSNetworkTypeMain;
}

- (void)tearDown
{
    // Put teardown code here. This method is called after the invocation of each test method in the class.
    [super tearDown];
}

- (void)testBlockHash
{
    // height 125552
    WSBlockHeader *block = [[WSBlockHeader alloc] initWithParameters:self.networkParameters
                                                             version:1
                                                     previousBlockId:WSHash256FromHex(@"00000000000008a3a41b85b8b29ad444def299fee21793cd8b9e567eab02cd81")
                                                          merkleRoot:WSHash256FromHex(@"2b12fcf1b09288fcaff797d71e950e71ae42b91e8bdb2304758dfcffc2b620e3")
                                                           timestamp:1305998791
                                                                bits:0x1a44b9f2
                                                               nonce:2504433986];

    WSHash256 *expBlockId = WSHash256FromHex(@"00000000000000001e8d6829a8a21adc5d38d0a473b144b6765798e61f98bd1d");
    DDLogInfo(@"Block id: %@", block.blockId);
    DDLogInfo(@"Expected: %@", expBlockId);
    XCTAssertEqualObjects(block.blockId, expBlockId);

    NSString *blockHex = [[block toBuffer] hexString];
    NSString *expBlockHex = @"0100000081cd02ab7e569e8bcd9317e2fe99f2de44d49ab2b8851ba4a308000000000000e320b6c2fffc8d750423db8b1eb942ae710e951ed797f7affc8892b0f1fc122bc7f5d74df2b9441a42a1469500";
    DDLogInfo(@"Block header: %@", blockHex);
    DDLogInfo(@"Expected    : %@", expBlockHex);
    XCTAssertEqualObjects(blockHex, expBlockHex);

}

- (void)testParseBlockHeader
{
    WSBlockHeader *header = WSBlockHeaderFromHex(self.networkParameters, @"020000005bd7027635cbcca125a156377643b86f6dd2b820a0741d39b4a7000000000000fca15af0cbaae20e8cd6d8c613ca058b291f793da7925db7e30b71db349479353f9cb5536431011b8818102d00");
    DDLogInfo(@"Header: %@", header);
    
    WSHash256 *blockId = header.blockId;
    WSHash256 *expBlockId = WSHash256FromHex(@"00000000000008ac05a77ab8a82ce8de160fc88307732282e43a47a3f8735fd8");
    XCTAssertEqualObjects(blockId, expBlockId);
}

- (void)testParseBlock
{
    WSBlock *block = WSBlockFromHex(self.networkParameters, @"01000000c300ab8b147c7792994375e70c33168391cfd78db6a627926d0fb5a900000000da3f1c08e2d6ffe82fb99ffab4fc969ad014e7dabbd37cccc697cb573b39b939c9f2a749ffff001d0893788f0101000000010000000000000000000000000000000000000000000000000000000000000000ffffffff0704ffff001d0176ffffffff0100f2052a01000000434104c8808d044bc43f17bc8b1a0c332b082029d6e059d12f30b91df9dc844fc6651ad1527e0551b7fceaac302714e63de5677d7427344b958885373a0d82899054c5ac00000000");
    DDLogInfo(@"Block: %@", block);

    XCTAssertEqualObjects(block.header.blockId, WSHash256FromHex(@"000000006950a126ea4be46f40412a2c40c580d075cbc57653fef2167aa5d295"));
    XCTAssertEqual([block estimatedSize], 215);
}

- (void)testParseFilteredBlock
{
    WSFilteredBlock *block = WSFilteredBlockFromHex(self.networkParameters, @"020000005bd7027635cbcca125a156377643b86f6dd2b820a0741d39b4a7000000000000fca15af0cbaae20e8cd6d8c613ca058b291f793da7925db7e30b71db349479353f9cb5536431011b8818102d12000000120763f91fe0bb2d89c0284588556f466123a1fb76cf591d7aa196115a1ed0cafa1fe750aeb68a59570d7be7f0b8f62698d6242b84db50bf6e314d10ca624789dd9a628ae55f7b1f7c652b99259503705b106c7cbe300e0a77054be720caec243668ff80caa26851ea1170462bf96e91e0bbe23da9949e1b0520e20983aca3406167febc07e28ca2163b9243f6878c53ceeeb71d18528f40bbc19c03dfd194e77f523e3d286d0856d951992ca24970abc98cd0b5a61bffe472583ecc60f06c3c033034b6b8b9d215df13bd46fcd8f26a3a12300a8f0213676ecd27ec8a51ecb18eeca10647a8a0c5466f5ac0d65623b7783eb83095379a15d99c7a86867fb951c098f8fbef7589f8bb9b09f290547af41eabb511037023359e8877a37574034c11b3f0acc28f3b97ecd78f3d9d3e96919a90d3067018fe981c10a0bb0148ddef696d74fa51489b4b1a3e03c0a888a71171b8c4936169ece50c71e7444281b305a92a2011c92a479b505340e1cdc48a0854536db8f2937a55a7cf07d2f59f26f6d3ed175b94b22798a73b723109901a30a94ad261c63a928acb8ca17a8019992515c074d1dfa3bd43935a1274b00c4d12fd87ee2ff0608d58d581e4e729af530b021808b863656bf47ece10a6c4f6a5a4173737a5cd113580d2f7e13bcd14201bea62b08a42110fb85b4e0e7116179b482a706edd4a8e975fe9b6df39931cc55ae6221d7cfc745b8d4234279fc7f3dc057f03b0ef29f942e929b9f52f28267f77fd98713c3f05a0de8922d1392ce26f60239865a38a8c94e5e4e7eb90a51245dc7a05ffffffff3f");
    DDLogInfo(@"Filtered block: %@", block);

    WSHash256 *blockId = block.header.blockId;
    WSHash256 *expBlockId = WSHash256FromHex(@"00000000000008ac05a77ab8a82ce8de160fc88307732282e43a47a3f8735fd8");
    XCTAssertEqualObjects(blockId, expBlockId);
}

- (void)testPartialMerkleTree
{
    NSArray *blockBuffers = @[@"020000005bd7027635cbcca125a156377643b86f6dd2b820a0741d39b4a7000000000000fca15af0cbaae20e8cd6d8c613ca058b291f793da7925db7e30b71db349479353f9cb5536431011b8818102d12000000120763f91fe0bb2d89c0284588556f466123a1fb76cf591d7aa196115a1ed0cafa1fe750aeb68a59570d7be7f0b8f62698d6242b84db50bf6e314d10ca624789dd9a628ae55f7b1f7c652b99259503705b106c7cbe300e0a77054be720caec243668ff80caa26851ea1170462bf96e91e0bbe23da9949e1b0520e20983aca3406167febc07e28ca2163b9243f6878c53ceeeb71d18528f40bbc19c03dfd194e77f523e3d286d0856d951992ca24970abc98cd0b5a61bffe472583ecc60f06c3c033034b6b8b9d215df13bd46fcd8f26a3a12300a8f0213676ecd27ec8a51ecb18eeca10647a8a0c5466f5ac0d65623b7783eb83095379a15d99c7a86867fb951c098f8fbef7589f8bb9b09f290547af41eabb511037023359e8877a37574034c11b3f0acc28f3b97ecd78f3d9d3e96919a90d3067018fe981c10a0bb0148ddef696d74fa51489b4b1a3e03c0a888a71171b8c4936169ece50c71e7444281b305a92a2011c92a479b505340e1cdc48a0854536db8f2937a55a7cf07d2f59f26f6d3ed175b94b22798a73b723109901a30a94ad261c63a928acb8ca17a8019992515c074d1dfa3bd43935a1274b00c4d12fd87ee2ff0608d58d581e4e729af530b021808b863656bf47ece10a6c4f6a5a4173737a5cd113580d2f7e13bcd14201bea62b08a42110fb85b4e0e7116179b482a706edd4a8e975fe9b6df39931cc55ae6221d7cfc745b8d4234279fc7f3dc057f03b0ef29f942e929b9f52f28267f77fd98713c3f05a0de8922d1392ce26f60239865a38a8c94e5e4e7eb90a51245dc7a05ffffffff3f",
                              @"020000006667990f0ec9f91bc6029d922a81a4754760cc3d71088298d041d1f1000000003a2e9aa5c409f6b6988dd85a4cad63b012a0afca2410348e97c0cefa04047dc1ff409a53e644021baf08d69c1200000012f421bab98c542396b0308589a1fc1cd7f30ec4707914fdabf4b6807e2b35852206666b8ea8ba7850e8fab686badde1244149fd82a4bbbffe0c28fcaa530c9e839554332089b60c5ddff697b745ace8ed8c8772c0fc97f5781184ad1e8a8cd1f9c3fd8e6198660dcf589fe6d07a4dfbf9d95f6db3c439a374fe8b15f5d5e7fa44806c5781039c0ff29214e1f224f9ffb90a7de63f8cdcb46461d8fd1eb18bd5246df8087440d18dd5ab1a39fe251126f26dce06d2f81596f09334c2ad80cf671432c171788695493cd139d5c80c36834098e74d2beebcff5846bc39b12f7245af86b725473e32a287e570874e8285aa09d7fbb9baa97843f21bf03e7ac596c6b4f147d7ca7dc4b1e18e5d879010c6e3142068fcd8260d59c4dfa3f0ab381869de767d9237df621b15bb2317a6942a5317299d8f15092a7b4269d986c35428705dfc94e9440f98c42cdf5c73e9aeb79c475e0282374782c9eec126008267cd9fc53f0e2428256636b44cdc3ada9f91c5c5251083e4166ad8433a5238e88aaa04075227faeeb667a8a11725ad15e417852de5c228a1512bac9846f6b215611ce7d4a9bef782bd2cdb9d2eaaf16e1db92453d963e9c34466e1eb78cd8d915dd8010f10df0e9c9e4e0b6563f89bf4e1087f95d571a5985a4985ebe147936024b7be78e3af7ee74677d34cbe2d72a147486dae689ba9c499c68aa86694f805defa9d24df7ea85ec0061d00357c0d5ad7316d5b38a6058f2af4722e52fd8cdebb756389c49bc1882c389f6297aa33e36903b7edad0f6be23c7f6c03db8aa509aed19fc205ffffffff3f",
                              @"02000000e24e4eaea93c85cf771cfd18865d4c37ea02dd33a07f9f8a7a90811000000000b20cdc0e8b13345c8aec1d94ca624f6c53dba583f69f2a538408b998d98561645d028e53ffff001dc0b2c50405000000053a50da4db9315bf4bae7a1340d2bf10f191e10736b09216cc695fda0e1e52e2f6574bb2f3beb7bef2dcbcf189c4400928f5f3ffe1a7ee4f88d050644d401126bffdce4aa9268db42055378a9dd6822e0817dcb03dde5218bbd6f9277f9221ae69330a250e7afed251e1014fab838071b8ae0b9c3fe0ebd259073212cc622b660204447a83ae3a3c1364d449891cba4a9f6d4a3608558c15b388787735fad31ec02ff07",
                              @"02000000d15deca7805bf19a7091f47144ceb9b1962e7ed40309e464dfb287a400000000a173a7ff6687d5880a5fe14354e4daf778f872606cc690e1854f1a4ea70e2cfcb676b553ffff001dc0a278bc6600000066cc8ed2c3dc775ebe3e2f430b6a4b3f8d7ff487b35c1b5d29eb6bb843d4fe195d616ea0459fc4af368539a9933e9eef33fa4669f7e2dddae6c46cc3dede7a57374220bc252c68f15e9d825b2aa162ac3a5a8424c6a2dabb4f42143e9cf4c9989ce0de21d90c2a06bf5a613c60ca16b389428b84fdbab61e2afd2de2ee01ddc00f38bd61ed1990d53c223e524c12ab150d371d34738fdc8b53adc23c87f190008bbbddbca3c4155c407498d7b9213da3f2ca8bdc55b2a7c21a0753b1aa1e15848b0c5c1918196997e23a8b55cb9aab1b31f2207093e6e2acc28fae2c1f461e087d9ed67e3ad97e295179bb5f3127ae8561f0cb192fa8497bdbb8e3c2595cc33563e819b16c218b5296235fba39cd0f47ec906bfa656c89ec5ac1e1660fed073c54101c997008301b7741ea5f94c8506c621b3006ab838d8bcfff494b4a1bf300332dccf5722797d2d54ca1479f1f6598d797fc00d7eb8260e9f02098663e0640b7103cce59abfdc77777a4e89e12951a72cecf687f076e7056422ce4600c16296d24bdc07855b718cdda154f6c6cd77da4006b71fecb1cb18f25c9e9df0a76be5b34c3de9f251e658d04fcc01485cc01defb244154c66e9ff504d214dfd079606867bffd6024ddc4037b68904e16dd5b3df9826e17805c5c9b09720cdf90f8e487ee97339664cf137c081c3216e23cb7f5d269fb17dbb627859a47323c66bdd0657346a34220a8ab162e5bc22b57f893ab4944a5af6a624ba7bf06740423f9584c7bfb2966ca19a5f56aa05153a10bb5a96f85e47a193c669e1cae93166dd0382890e1c7d8caa88dbb529d123193132cc719b39cd52d19a2c22d8021abc9087e50c7293dac4f7150476401a10d8883ca192a26e338569cc63a6b0677b9e4652a6b58f4750bef07d2f5a76d8a5fd86a834fb91e93219b8f75732f6e6f585f30fd385441775fb9045f20888737849d54dfe8bc13ab98bfbaf203b89805a36c29f8b673a92f7054c5a7bc5317487f1505f2ef387b62c62b15e076e60ad6192d9d8909b990f97a672e18dec8829c81cfa5090110ed8de512b9abbee7ff271ef72693b9be2e37199ce652cdcbbbde0b540a81d09ddeab2bebc692f46fa0ffd67df64dc86b8014e08d3ed5acdd0777625770ea1637d8bf541796c937917cd9dd7a086917cad7aa8a7ea551b8c06308353e650a0511f3bdc5bd46b38dda0634cc78868efbeef4886e425ca406237a6e9bc747798ebeb2549536a6c5aa415e268b71e4e6e0d8426b2164b623a2bd750d19d39c448742a4ef90afcc566d5cf5a341ab1d5da9d00c950d650bfcc416675bf41f400fd726f448162a0434f7863c3eeb0517850887bd6e4077bfc670b5a6b56f1a2919e9242f270616c3f96d25969ffe0d90718fdb2fd1bf65b194bf57023a252146727ab6fd28583b52c574cbdb2a43291bfcd788f64e9daffa4c6b4e66772cdd0c1e0f8797690be32ba644325b529a2615c7b6b97d30e7f87311077897eafcc75bf55c070c04acefc7f659685e24ed12e5c452a44253053e3e6951ac5cb97729405d1eb7b5fe9f6031ee3ceab2c9273555a9c100600281117981fac535ffb4fb969142032a20f8d14b0d0aadfcc55a629e318f4588f4647f7ead87de056706b57c851bc80575f46c1e70c919a99eb92d5d4b776874621a34c37261edec2e5d7f737d87d0fc9574f8f7673e4dfec1d7c9c495cf537aed6ae9edf339d3f231aef21c4edfeddcd4bbaa9b149c484d00bc2519582648d70b0f2c8836f4a1b512d95316881c2a076a7ad42234f390dedaf9fd1703494dbe1cea0eab71574b039f7de7072bbe1eb0cf588eccb6c6bfd4bff87a49eee468696bb3b42825a46d4fbb9c42b8300eecbed90ba35b1ddd4a366afb2693dca794f5104ad89d27ddc996780982da0f7b9928c82ce73293b32dc171d7a50c3c6ce6b7937f9993100ff88e3afd855c502eba5366f72c8f75c5453186e3db00803aa5a11fc9d1e7a2fdabe267509b299bc51a2a1509ccddfb59b409e71e40b7ac92b48675dd2554f921a789748e64f602345605cc2612324bccc1376ff42e9173a973bccb44faab312447a1537ee1539fc4dcc6b2a709ef1dc2e51e95aebca989ed07a86e9ca335768d59da009cd8de6e64cccdc554aa0a42eb43e7c532abe1a22425de7bc880d5e3e34ecf1bcbbe863d439386b6b9464434f086fb1ac53a5dfefd27a327b0f520af4d36a31dfe360d95104d6e5b8ef5b468be1281e55a1b65845d7b2be871b0c56f83811ba3589f3c65b9683b28516f7b0e9e27a15e123eddc806c6ae522138d09104887fffe9f96d9e8f7cd3f959a2e48c6c2bb40a986ad023d099efcfde260c7026b86d1f21301eff0ae8266993460815c4e788b580032eb2e2eb2259fff6ae27c0eff5216842bcea527db9ee98e2426f7a53687dd3fb7ee90547b9012e45e967ff2c91664ddf7b95de7b79122be1ea0fd88abb85258a145b7392402e2474480c3a5fa0d9c4ec6f6b14c6c4d428a52f110aecab3ddfa838fd87bce1d20c165b9bc2624362f3944c44696d36842b882e4a28e52754279e3f0dba8b48cc429e73f583732b1f1890c8f4cf49bd7dcdc6f2f801aee79bd89edf5dd5bf7bcbe39ba663d7b486798a65c9dbb0b07dd15efc0ae2323282a41a754306f5fc364ab773ca6dc8df18766565b6cd70d6d72a1c1e54a60e54332badc29617377cd3b68710e3af17632ee72f61290d650c0ef6c290328657e45905b03b0ec5a57ed00ce1ccbd6b5e326a9ae0e9eb95a5a52974f9475bb1e1c2d2958591a49617ffe5b8a2721852eca0782aa1cb7b9fca88beb87bff4a73479ea94a377612876aaeef5804c91dea04692d225a4931776ed1d4c0729f48afd294846fa62583772f0ceb594f3551663af8677d1f2409672ad43c1de4c441c3833713889a83a0beacdb1141b2e6d15d2eca246df464ff74ed36859b170dfe58efeadc840c9a73433e63c9de9d825f69e4bcc3c99b8eb156afaf92a28d648cb1e04d6617b0d2747fc2ad37e54516235225dfa8a817f47831d9a94e211fc9a22b295210d019a9e375b7790dceab93cbb36e9adafd7022dbc8b7827bb1dc098a473c34e422866bbeb7323668cee8cea56b77e47ca5e01c0ec9f86680c08b45fbea65d3594c3099cb59f8d858c7653805d2aa6786a34aae4264b9a18ec973cbf43ff2495e137be5644289819be9c9df598124fee2f7341bd8ec7fd920773175e02dded8fb69741d46cc6ad4a21ba36fdbaae59ef65e75884e9f85f73fe486e2b160f5cceab51fec7f3d437ba340ad6183a36e3fd91fcbfd614f2627eb45e9fcb78c586f654be3b08de8b84fea875d2b926d944038d600eaa991132113ebbcc59f2062d8d763c1dc069c8a4e5f0cbf66aaa1ad7f6f6208d6267cd1dff4914554105036819dc06773da9341e9f6a799eb3a3569573685230ea455160cf96a9b1da84f40ac46080b9b6659eca6631fe0ce37e7902d9b0241bcba00448719315a15aae2d2e3883d1adfb66a645e400aef8520fe3ab889c9d3feb6a033a4f46c59dc949e5fcd5d4b0364b0d61a3d1981ae894731acce838a018b11b70017185f5e875870de4136962346687beb9ada82d53e66f8491f6812595b8ce2eba3e9515c9695e6e0ddaffaa5644e85e146097a27dc136f89096471e82b5d61d5a831aa6fac5abfc5d2997c951701daaa732a4f94e5b72f9dd13acda3575abfd2856326db49b1321bef04468df3e66e8ed38ca2814d907a749100bc940c01d5f665f16974864cb430de10da66a15da15c896d1b9090a9c041f61ce7cbb55c297042d91436e2b6eaef92882882b12969811650f9372431cbcf31453dc54eb0ff139ece8461f2d58f4128466d517cb0f94281b046937b0c37fb8ba383df1327fa57a6b83432499ff5b30536c01e18affac3fd60916ead61579e64643cd534051d3160892367f771e1b93e6af15dae19b27f60d121d8d618d98eff4d82353e567414c3679ed67d9d7bbdffc7469597dfe6f12409ea3fbb4993628eae86f561dbe197330f9487025cfceeffc14ce392c5ef669a470c4dc85b3d2856bc3d3f3b4e39e0c029b4b9519bcd001c2021bd834d7ea10438618cc748773f58edf9bd7132b9edf38ec6d9f081b908d09a815562ef646822ba4760054efae0ddc1dce1332570247cbe20e0503f1b65ecfaa7a98cb0ad4444985910c1d1f360f5634a1a79d269c7958a8e5ae2edc459e1e21c4bebfed42803046978c84a10823ec68add9420c9b9b425c0e8dad68fdedb0d1e4a73ebb33932f065a32205671a479b82f9172381bb7c4c6ad5d7edd92e99abed2010d4026ffd6c3d714cd72897f5c44ed1d1be82bd08165801a944600ba3854b3eedf5c69fa7c78a28001a1c22d517a64b25972570a93706852265c42f2a6a3895c54e4411e265208617862ae5b12bbb5b0bf51f486aa3bb4bf91a4998b273bb823171c1618b90d5bb64ae3de9b4651ad3e0cada787a6413d7c5fb35adc32fc7ae69ec8e59711158a213c3933a346f41e217f4baaa6ccd52fc8284348276d485a1c4a278963c331ee4f48e87042ab53c9a591bd65ed070db64a5ec08f846b8c70e4a6b18861affffffffffffffffffffffffffffffffffffffffffffffffff3f"];

    NSArray *blockIds = @[@"00000000000008ac05a77ab8a82ce8de160fc88307732282e43a47a3f8735fd8",  // 18 txs, 1 leaves
                          @"000000000000cb954e391729b27c5ed4f4ee0712cafe3c2bcffe99d12d6ee536",  // 18 txs, 1 leaves
                          @"00000000ccc899426a9fa292038e1459db72b140d063ca24bf5598f57129173f",  // 5 txs, 1 leaves
                          @"00000000b6293822dd615fb57ad734ad4f13cf460c289eb89910d0c7016e8841"]; // 102 txs, 1 leaves

    NSArray *txIds = @[@"a905b3814244e7710ce5ec696193c4b87111a788a8c0033e1a4b9b4851fa746d",
                       @"24d58bb11efdd86164b4dc8c3fe67d0ab9fff924f2e11492f20f9c0381576c80",
                       @"6b1201d44406058df8e47e1afe3f5f8f9200449c18cfcb2def7beb3b2fbb7465",
                       @"8b84151eaab153071ac2a7b255dc8bcaf2a33d21b9d79874405c15c4a3bcddbb"];

    NSUInteger i = 0;
    for (NSString *blockBufferHex in blockBuffers) {
        NSError *error;
        WSBuffer *blockBuffer = WSBufferFromHex(blockBufferHex);
        WSFilteredBlock *block = [[WSFilteredBlock alloc] initWithParameters:self.networkParameters buffer:blockBuffer from:0 available:blockBuffer.length error:&error];
        XCTAssertNotNil(block, @"%@", error);

        DDLogInfo(@"Block: %@", block);

        WSHash256 *expBlockId = WSHash256FromHex(blockIds[i]);
        XCTAssertEqualObjects(block.header.blockId, expBlockId);
        
        WSPartialMerkleTree *pmt = block.partialMerkleTree;
        WSHash256 *txId = WSHash256FromHex(txIds[i]);
        XCTAssertTrue([pmt matchesTransactionWithId:txId]);

        ++i;
    }
}

- (void)testTransactionInPartialMerkleTree
{
    NSString *blockHex = @"0300000010ecc5c88e6de3e673086b76e72fb8c50156df80e83c215729d13c07000000007c553d05a76d608ef73458f2342dda6c0e9385e48ddfda7538f898a891ee065ec9aefa55ffff001d57c4fd79150000000593c2d1c800939e157c9eb0701a4e1e152be81f51c1831b121524dec3f7a43f6c1ecb4aa61e62572cfbaac98f8f4b7f471e40e66b7dceea232d9cf10745d1e6a4b64ecdf832647ee84625f3bcfb727d80d466be3e042d41182098b93633659db6e05a4c3757e95c952b335d4bba6560b918e17ca40b5b940e35eaf8ec90e5a83c0747998537a41529920ed9e4ccfb4a98c08631137920ba5485237c8272cfa72a02dd00";
    NSString *txIdHex = @"b69d653336b9982018412d043ebe66d4807d72fbbcf32546e87e6432f8cd4eb6";

    WSFilteredBlock *block = WSFilteredBlockFromHex(self.networkParameters, blockHex);
    WSHash256 *txId = WSHash256FromHex(txIdHex);
    
    DDLogInfo(@"PMT transactions: %@", [block.partialMerkleTree valueForKey:@"matchedTxIds"]);

    XCTAssertTrue([block.partialMerkleTree matchesTransactionWithId:txId]);
}

- (void)testVerifyBlockHeaders
{
    NSArray *headers = @[@"0100000043497fd7f826957108f4a30fd9cec3aeba79972084e90ead01ea330900000000bac8b0fa927c0ac8234287e33c5f74d38d354820e24756ad709d7038fc5f31f020e7494dffff001d03e4b67200",
                         @"0100000006128e87be8b1b4dea47a7247d5528d2702c96826c7a648497e773b800000000e241352e3bec0a95a6217e10c3abb54adfa05abb12c126695595580fb92e222032e7494dffff001d00d2353400",
                         @"0100000020782a005255b657696ea057d5b98f34defcf75196f64f6eeac8026c0000000041ba5afc532aae03151b8aa87b65e1594f97504a768e010c98c0add79216247186e7494dffff001d058dc2b600",
                         @"0100000010befdc16d281e40ecec65b7c9976ddc8fd9bc9752da5827276e898b000000004c976d5776dda2da30d96ee810cd97d23ba852414990d64c4c720f977e651f2daae7494dffff001d02a9764000",
                         @"01000000dde5b648f594fdd2ec1c4083762dd13b197bb1381e74b1fff90a5d8b00000000b3c6c6c1118c3b6abaa17c5aa74ee279089ad34dc3cec3640522737541cb016818e8494dffff001d02da84c000",
                         @"01000000a1213bd4754a6606444b97b5e8c46e9b7832773ff434bd5f87ac45bc00000000d1e7026986a9cd247b5b85a3f30ecbabb6d61840d0abb81f905c411d5fc145e831e8494dffff001d004138f900",
                         @"010000007b0a09f26fdde2c432167d8349681c7801d0128f4dfae4dc5e68336600000000c1d71f59ce4419c793eb829380a41dc1ad48c19fcb0083b8f67094d5cae263ad81e8494dffff001d004ddad500",
                         @"01000000a62bc0c08afc1d12e6c6a7eb4a464c848190ac0e44123d5fa63a9ee2000000000214335cde9edeb6aa0195f68c08e5e46b07043e24aeff51fd9a3ff992ce6976a0e8494dffff001d02f3392700",
                         @"01000000f9e2142a93185496f7b21314d8b6fa736d0a30fa3a6d339ab3a1ba9c0000000061974472615d348df6de106dbaaa08cf4dec65e39cefc62af6097b967b9bea52fde8494dffff001d00ca48a200",
                         @"010000001e93aa99c8ff9749037d74a2207f299502fa81d56a4ea2ad5330ff50000000002ec2266c3249ce2e079059e0aec01a2d8d8306a468ad3f18f06051f2c3b1645435e9494dffff001d008918cf00",
                         @"010000002e9afd58b91f15c3ec9eb0f01ed9d503134da1918b6bb416a9920e700000000029fb495afdb58f3a26d1c90fafec93aed840e2fa37ad6173ba1e7fadb7121ee57de9494dffff001d02e7f31800",
                         @"0100000027e0ca29a9802c0a2390ecfa90a9bd814fecc54446510e155652dead000000007e8d5344557575c8f018cc62a32e8e0bd80638643b4ec34945ec4662fcab138142ea494dffff001d04acbc3c00",
                         @"01000000001f3ada9b561378e324e80ee68facd5d232f72f773b86328393054700000000eaf3be35e3f0ace8b6abdeb5509d72999eae2329657238b53fa437e319c8e96b99ea494dffff001d027801a800",
                         @"01000000781bc7847e15c3b936a6a6a178e38fa29ee6e4916a8a62e10795c69200000000d44c3443fa8bd88bf32b94b9257f09ce6fb6ec0d5420504d631568f8685200dfa1ea494dffff001d01f781d000",
                         @"01000000133991a938b505ee8f6f347f313c3372d82a9d8b42b08b0dd0fc086400000000a0ef58c239e0197a65aa248c2cf52c437d8c8ea30d1b835e630a87c941f7d4e9adea494dffff001d030ef2e000",
                         @"0100000028d34cdb13e555032e4bec55fcce3d0fef8212803fb1bab851e1259400000000542c71544b9f28bd5a6fec95ecd509ae49d0b04f8718c685d0751f71d38285d0c3ea494dffff001d056b311500",
                         @"010000006b00cf1ce31b33fe1e2c4648a0834dedd972ffb2a2f341f75ad7cbc400000000adebf7afcbf176f765aec16b74d92896f55c3d65e14dd1a8becee0871000291751eb494dffff001d006f85e800",
                         @"0100000043a78ddf30a2d28a42cc66f90d13cb8211ee0fca9dbf8a4cce8c19fe000000004edbd2b89cb6d6fd69b575a62bd4e3103b1e0ce19e31bccf9a093ad8ccd753cf7deb494dffff001d0591a0b300",
                         @"01000000489ac81592595a4004e14331cb096ffef12b1daf709f6378e9c3558d00000000c757bebd6f2c2c071a3cf739a4cf98b27441809790a5cf40652b46df8a98a473b0eb494dffff001d011aedb600",
                         @"01000000a9c570a45d959023551f9a694ace9c12206174f21383f30949ca3b9b00000000eaf93dbbfb3551a1ff8b6bd5ba4cea7508e790c23cd07b9d9e791936a79d5fd4b3eb494dffff001d0385a7dd00"];

    for (NSString *hex in headers) {
        NSError *error;
        WSBuffer *buffer = WSBufferFromHex(hex);
        WSBlockHeader *header = [[WSBlockHeader alloc] initWithParameters:self.networkParameters buffer:buffer from:0 available:buffer.length error:&error];
        XCTAssertNotNil(header, @"Error parsing header: %@", error);
        XCTAssertEqualObjects([[header toBuffer] hexString], hex);

        [header verifyWithError:&error];
        XCTAssertNil(error, @"Error validating header: %@", error);
    }
}

- (void)testVerifyFilteredBlocks
{
    NSArray *blocks = @[@"020000005bd7027635cbcca125a156377643b86f6dd2b820a0741d39b4a7000000000000fca15af0cbaae20e8cd6d8c613ca058b291f793da7925db7e30b71db349479353f9cb5536431011b8818102d12000000120763f91fe0bb2d89c0284588556f466123a1fb76cf591d7aa196115a1ed0cafa1fe750aeb68a59570d7be7f0b8f62698d6242b84db50bf6e314d10ca624789dd9a628ae55f7b1f7c652b99259503705b106c7cbe300e0a77054be720caec243668ff80caa26851ea1170462bf96e91e0bbe23da9949e1b0520e20983aca3406167febc07e28ca2163b9243f6878c53ceeeb71d18528f40bbc19c03dfd194e77f523e3d286d0856d951992ca24970abc98cd0b5a61bffe472583ecc60f06c3c033034b6b8b9d215df13bd46fcd8f26a3a12300a8f0213676ecd27ec8a51ecb18eeca10647a8a0c5466f5ac0d65623b7783eb83095379a15d99c7a86867fb951c098f8fbef7589f8bb9b09f290547af41eabb511037023359e8877a37574034c11b3f0acc28f3b97ecd78f3d9d3e96919a90d3067018fe981c10a0bb0148ddef696d74fa51489b4b1a3e03c0a888a71171b8c4936169ece50c71e7444281b305a92a2011c92a479b505340e1cdc48a0854536db8f2937a55a7cf07d2f59f26f6d3ed175b94b22798a73b723109901a30a94ad261c63a928acb8ca17a8019992515c074d1dfa3bd43935a1274b00c4d12fd87ee2ff0608d58d581e4e729af530b021808b863656bf47ece10a6c4f6a5a4173737a5cd113580d2f7e13bcd14201bea62b08a42110fb85b4e0e7116179b482a706edd4a8e975fe9b6df39931cc55ae6221d7cfc745b8d4234279fc7f3dc057f03b0ef29f942e929b9f52f28267f77fd98713c3f05a0de8922d1392ce26f60239865a38a8c94e5e4e7eb90a51245dc7a05ffffffff3f",
                        @"020000006667990f0ec9f91bc6029d922a81a4754760cc3d71088298d041d1f1000000003a2e9aa5c409f6b6988dd85a4cad63b012a0afca2410348e97c0cefa04047dc1ff409a53e644021baf08d69c1200000012f421bab98c542396b0308589a1fc1cd7f30ec4707914fdabf4b6807e2b35852206666b8ea8ba7850e8fab686badde1244149fd82a4bbbffe0c28fcaa530c9e839554332089b60c5ddff697b745ace8ed8c8772c0fc97f5781184ad1e8a8cd1f9c3fd8e6198660dcf589fe6d07a4dfbf9d95f6db3c439a374fe8b15f5d5e7fa44806c5781039c0ff29214e1f224f9ffb90a7de63f8cdcb46461d8fd1eb18bd5246df8087440d18dd5ab1a39fe251126f26dce06d2f81596f09334c2ad80cf671432c171788695493cd139d5c80c36834098e74d2beebcff5846bc39b12f7245af86b725473e32a287e570874e8285aa09d7fbb9baa97843f21bf03e7ac596c6b4f147d7ca7dc4b1e18e5d879010c6e3142068fcd8260d59c4dfa3f0ab381869de767d9237df621b15bb2317a6942a5317299d8f15092a7b4269d986c35428705dfc94e9440f98c42cdf5c73e9aeb79c475e0282374782c9eec126008267cd9fc53f0e2428256636b44cdc3ada9f91c5c5251083e4166ad8433a5238e88aaa04075227faeeb667a8a11725ad15e417852de5c228a1512bac9846f6b215611ce7d4a9bef782bd2cdb9d2eaaf16e1db92453d963e9c34466e1eb78cd8d915dd8010f10df0e9c9e4e0b6563f89bf4e1087f95d571a5985a4985ebe147936024b7be78e3af7ee74677d34cbe2d72a147486dae689ba9c499c68aa86694f805defa9d24df7ea85ec0061d00357c0d5ad7316d5b38a6058f2af4722e52fd8cdebb756389c49bc1882c389f6297aa33e36903b7edad0f6be23c7f6c03db8aa509aed19fc205ffffffff3f",
                        @"02000000e24e4eaea93c85cf771cfd18865d4c37ea02dd33a07f9f8a7a90811000000000b20cdc0e8b13345c8aec1d94ca624f6c53dba583f69f2a538408b998d98561645d028e53ffff001dc0b2c50405000000053a50da4db9315bf4bae7a1340d2bf10f191e10736b09216cc695fda0e1e52e2f6574bb2f3beb7bef2dcbcf189c4400928f5f3ffe1a7ee4f88d050644d401126bffdce4aa9268db42055378a9dd6822e0817dcb03dde5218bbd6f9277f9221ae69330a250e7afed251e1014fab838071b8ae0b9c3fe0ebd259073212cc622b660204447a83ae3a3c1364d449891cba4a9f6d4a3608558c15b388787735fad31ec02ff07",
                        @"02000000d15deca7805bf19a7091f47144ceb9b1962e7ed40309e464dfb287a400000000a173a7ff6687d5880a5fe14354e4daf778f872606cc690e1854f1a4ea70e2cfcb676b553ffff001dc0a278bc6600000066cc8ed2c3dc775ebe3e2f430b6a4b3f8d7ff487b35c1b5d29eb6bb843d4fe195d616ea0459fc4af368539a9933e9eef33fa4669f7e2dddae6c46cc3dede7a57374220bc252c68f15e9d825b2aa162ac3a5a8424c6a2dabb4f42143e9cf4c9989ce0de21d90c2a06bf5a613c60ca16b389428b84fdbab61e2afd2de2ee01ddc00f38bd61ed1990d53c223e524c12ab150d371d34738fdc8b53adc23c87f190008bbbddbca3c4155c407498d7b9213da3f2ca8bdc55b2a7c21a0753b1aa1e15848b0c5c1918196997e23a8b55cb9aab1b31f2207093e6e2acc28fae2c1f461e087d9ed67e3ad97e295179bb5f3127ae8561f0cb192fa8497bdbb8e3c2595cc33563e819b16c218b5296235fba39cd0f47ec906bfa656c89ec5ac1e1660fed073c54101c997008301b7741ea5f94c8506c621b3006ab838d8bcfff494b4a1bf300332dccf5722797d2d54ca1479f1f6598d797fc00d7eb8260e9f02098663e0640b7103cce59abfdc77777a4e89e12951a72cecf687f076e7056422ce4600c16296d24bdc07855b718cdda154f6c6cd77da4006b71fecb1cb18f25c9e9df0a76be5b34c3de9f251e658d04fcc01485cc01defb244154c66e9ff504d214dfd079606867bffd6024ddc4037b68904e16dd5b3df9826e17805c5c9b09720cdf90f8e487ee97339664cf137c081c3216e23cb7f5d269fb17dbb627859a47323c66bdd0657346a34220a8ab162e5bc22b57f893ab4944a5af6a624ba7bf06740423f9584c7bfb2966ca19a5f56aa05153a10bb5a96f85e47a193c669e1cae93166dd0382890e1c7d8caa88dbb529d123193132cc719b39cd52d19a2c22d8021abc9087e50c7293dac4f7150476401a10d8883ca192a26e338569cc63a6b0677b9e4652a6b58f4750bef07d2f5a76d8a5fd86a834fb91e93219b8f75732f6e6f585f30fd385441775fb9045f20888737849d54dfe8bc13ab98bfbaf203b89805a36c29f8b673a92f7054c5a7bc5317487f1505f2ef387b62c62b15e076e60ad6192d9d8909b990f97a672e18dec8829c81cfa5090110ed8de512b9abbee7ff271ef72693b9be2e37199ce652cdcbbbde0b540a81d09ddeab2bebc692f46fa0ffd67df64dc86b8014e08d3ed5acdd0777625770ea1637d8bf541796c937917cd9dd7a086917cad7aa8a7ea551b8c06308353e650a0511f3bdc5bd46b38dda0634cc78868efbeef4886e425ca406237a6e9bc747798ebeb2549536a6c5aa415e268b71e4e6e0d8426b2164b623a2bd750d19d39c448742a4ef90afcc566d5cf5a341ab1d5da9d00c950d650bfcc416675bf41f400fd726f448162a0434f7863c3eeb0517850887bd6e4077bfc670b5a6b56f1a2919e9242f270616c3f96d25969ffe0d90718fdb2fd1bf65b194bf57023a252146727ab6fd28583b52c574cbdb2a43291bfcd788f64e9daffa4c6b4e66772cdd0c1e0f8797690be32ba644325b529a2615c7b6b97d30e7f87311077897eafcc75bf55c070c04acefc7f659685e24ed12e5c452a44253053e3e6951ac5cb97729405d1eb7b5fe9f6031ee3ceab2c9273555a9c100600281117981fac535ffb4fb969142032a20f8d14b0d0aadfcc55a629e318f4588f4647f7ead87de056706b57c851bc80575f46c1e70c919a99eb92d5d4b776874621a34c37261edec2e5d7f737d87d0fc9574f8f7673e4dfec1d7c9c495cf537aed6ae9edf339d3f231aef21c4edfeddcd4bbaa9b149c484d00bc2519582648d70b0f2c8836f4a1b512d95316881c2a076a7ad42234f390dedaf9fd1703494dbe1cea0eab71574b039f7de7072bbe1eb0cf588eccb6c6bfd4bff87a49eee468696bb3b42825a46d4fbb9c42b8300eecbed90ba35b1ddd4a366afb2693dca794f5104ad89d27ddc996780982da0f7b9928c82ce73293b32dc171d7a50c3c6ce6b7937f9993100ff88e3afd855c502eba5366f72c8f75c5453186e3db00803aa5a11fc9d1e7a2fdabe267509b299bc51a2a1509ccddfb59b409e71e40b7ac92b48675dd2554f921a789748e64f602345605cc2612324bccc1376ff42e9173a973bccb44faab312447a1537ee1539fc4dcc6b2a709ef1dc2e51e95aebca989ed07a86e9ca335768d59da009cd8de6e64cccdc554aa0a42eb43e7c532abe1a22425de7bc880d5e3e34ecf1bcbbe863d439386b6b9464434f086fb1ac53a5dfefd27a327b0f520af4d36a31dfe360d95104d6e5b8ef5b468be1281e55a1b65845d7b2be871b0c56f83811ba3589f3c65b9683b28516f7b0e9e27a15e123eddc806c6ae522138d09104887fffe9f96d9e8f7cd3f959a2e48c6c2bb40a986ad023d099efcfde260c7026b86d1f21301eff0ae8266993460815c4e788b580032eb2e2eb2259fff6ae27c0eff5216842bcea527db9ee98e2426f7a53687dd3fb7ee90547b9012e45e967ff2c91664ddf7b95de7b79122be1ea0fd88abb85258a145b7392402e2474480c3a5fa0d9c4ec6f6b14c6c4d428a52f110aecab3ddfa838fd87bce1d20c165b9bc2624362f3944c44696d36842b882e4a28e52754279e3f0dba8b48cc429e73f583732b1f1890c8f4cf49bd7dcdc6f2f801aee79bd89edf5dd5bf7bcbe39ba663d7b486798a65c9dbb0b07dd15efc0ae2323282a41a754306f5fc364ab773ca6dc8df18766565b6cd70d6d72a1c1e54a60e54332badc29617377cd3b68710e3af17632ee72f61290d650c0ef6c290328657e45905b03b0ec5a57ed00ce1ccbd6b5e326a9ae0e9eb95a5a52974f9475bb1e1c2d2958591a49617ffe5b8a2721852eca0782aa1cb7b9fca88beb87bff4a73479ea94a377612876aaeef5804c91dea04692d225a4931776ed1d4c0729f48afd294846fa62583772f0ceb594f3551663af8677d1f2409672ad43c1de4c441c3833713889a83a0beacdb1141b2e6d15d2eca246df464ff74ed36859b170dfe58efeadc840c9a73433e63c9de9d825f69e4bcc3c99b8eb156afaf92a28d648cb1e04d6617b0d2747fc2ad37e54516235225dfa8a817f47831d9a94e211fc9a22b295210d019a9e375b7790dceab93cbb36e9adafd7022dbc8b7827bb1dc098a473c34e422866bbeb7323668cee8cea56b77e47ca5e01c0ec9f86680c08b45fbea65d3594c3099cb59f8d858c7653805d2aa6786a34aae4264b9a18ec973cbf43ff2495e137be5644289819be9c9df598124fee2f7341bd8ec7fd920773175e02dded8fb69741d46cc6ad4a21ba36fdbaae59ef65e75884e9f85f73fe486e2b160f5cceab51fec7f3d437ba340ad6183a36e3fd91fcbfd614f2627eb45e9fcb78c586f654be3b08de8b84fea875d2b926d944038d600eaa991132113ebbcc59f2062d8d763c1dc069c8a4e5f0cbf66aaa1ad7f6f6208d6267cd1dff4914554105036819dc06773da9341e9f6a799eb3a3569573685230ea455160cf96a9b1da84f40ac46080b9b6659eca6631fe0ce37e7902d9b0241bcba00448719315a15aae2d2e3883d1adfb66a645e400aef8520fe3ab889c9d3feb6a033a4f46c59dc949e5fcd5d4b0364b0d61a3d1981ae894731acce838a018b11b70017185f5e875870de4136962346687beb9ada82d53e66f8491f6812595b8ce2eba3e9515c9695e6e0ddaffaa5644e85e146097a27dc136f89096471e82b5d61d5a831aa6fac5abfc5d2997c951701daaa732a4f94e5b72f9dd13acda3575abfd2856326db49b1321bef04468df3e66e8ed38ca2814d907a749100bc940c01d5f665f16974864cb430de10da66a15da15c896d1b9090a9c041f61ce7cbb55c297042d91436e2b6eaef92882882b12969811650f9372431cbcf31453dc54eb0ff139ece8461f2d58f4128466d517cb0f94281b046937b0c37fb8ba383df1327fa57a6b83432499ff5b30536c01e18affac3fd60916ead61579e64643cd534051d3160892367f771e1b93e6af15dae19b27f60d121d8d618d98eff4d82353e567414c3679ed67d9d7bbdffc7469597dfe6f12409ea3fbb4993628eae86f561dbe197330f9487025cfceeffc14ce392c5ef669a470c4dc85b3d2856bc3d3f3b4e39e0c029b4b9519bcd001c2021bd834d7ea10438618cc748773f58edf9bd7132b9edf38ec6d9f081b908d09a815562ef646822ba4760054efae0ddc1dce1332570247cbe20e0503f1b65ecfaa7a98cb0ad4444985910c1d1f360f5634a1a79d269c7958a8e5ae2edc459e1e21c4bebfed42803046978c84a10823ec68add9420c9b9b425c0e8dad68fdedb0d1e4a73ebb33932f065a32205671a479b82f9172381bb7c4c6ad5d7edd92e99abed2010d4026ffd6c3d714cd72897f5c44ed1d1be82bd08165801a944600ba3854b3eedf5c69fa7c78a28001a1c22d517a64b25972570a93706852265c42f2a6a3895c54e4411e265208617862ae5b12bbb5b0bf51f486aa3bb4bf91a4998b273bb823171c1618b90d5bb64ae3de9b4651ad3e0cada787a6413d7c5fb35adc32fc7ae69ec8e59711158a213c3933a346f41e217f4baaa6ccd52fc8284348276d485a1c4a278963c331ee4f48e87042ab53c9a591bd65ed070db64a5ec08f846b8c70e4a6b18861affffffffffffffffffffffffffffffffffffffffffffffffff3f"];
    
    for (NSString *hex in blocks) {
        NSError *error;
        WSBuffer *buffer = WSBufferFromHex(hex);
        WSFilteredBlock *block = [[WSFilteredBlock alloc] initWithParameters:self.networkParameters buffer:buffer from:0 available:buffer.length error:&error];
        XCTAssertNotNil(block, @"%@", error);

        XCTAssertEqualObjects([[block toBuffer] hexString], hex, @"Reencoded block differs");
        
        XCTAssertTrue([block verifyWithError:&error], @"Error validating block: %@", error);
        WSTimestampSetCurrent(1000);
        XCTAssertFalse([block verifyWithError:&error], @"Verified invalid block");
        WSTimestampUnsetCurrent();
    }
}

- (void)testMaxHash
{
    BIGNUM target;

    BN_init(&target);
    BN_lshift(&target, BN_value_one(), 256);
    BN_sub(&target, &target, BN_value_one());
    
    NSString *hex = [NSString stringWithUTF8String:BN_bn2hex(&target)];
    NSString *expHex = @"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF";
    XCTAssertEqualObjects(hex, expHex);
}

- (void)testCompactMaxTarget
{
    BIGNUM target;
    NSString *expHex = @"00000000ffff0000000000000000000000000000000000000000000000000000";
    const uint32_t expBits = 0x1d00ffff;
    
    BN_init(&target);

    BN_bin2bn([expHex dataFromHex].bytes, 32, &target);
    const uint32_t bits = WSBlockGetBits(&target);
    DDLogInfo(@"Bits    : %x", bits);
    DDLogInfo(@"Expected: %x", expBits);
    XCTAssertEqual(bits, expBits);

    BN_free(&target);
}

- (void)testDifficulty
{
    // block #310261
    const uint32_t bits = 406937553;
    DDLogInfo(@"Bits: %u", bits);

    NSString *difficultyString = WSBlockGetDifficultyStringFromBits(self.networkParameters, bits);
    DDLogInfo(@"Difficulty (float): %@", difficultyString);
    NSString *difficulty = [difficultyString componentsSeparatedByString:@"."][0];
    NSString *expDifficulty = @"16818461371";
    XCTAssertEqualObjects(difficulty, expDifficulty);

    NSData *difficultyBytes = WSBlockGetDifficultyFromBits(self.networkParameters, bits);
    NSString *difficultyHex = [difficultyBytes hexString];
    DDLogInfo(@"Difficulty (hex): %@", difficultyHex);
    BIGNUM *expDiffBN = NULL;
    BN_dec2bn(&expDiffBN, expDifficulty.UTF8String);
    NSString *expDifficultyHex = [[NSString stringWithUTF8String:BN_bn2hex(expDiffBN)] lowercaseString];
    BN_free(expDiffBN);
    XCTAssertEqualObjects(difficultyHex, expDifficultyHex);
}

// WARNING: testnet
- (void)testTransitionStatic
{
    // 44352
    NSString *retargetHex = @"010200000023dd3ee8947c37cc3c5ca446bb3ccfc3d9e2af04482d366b6db97537000000006092a5f1e1628c1da9b17a720fb5366271fced2686ee45bde664cc325f7f76d8886cda50f0ff0f1cf4cd2abd00";
    WSBuffer *retargetBuffer = WSBufferFromHex(retargetHex);
    WSMessageHeaders *retargetMessage = [[WSMessageHeaders alloc] initWithParameters:self.networkParameters buffer:retargetBuffer from:0 available:retargetBuffer.length error:NULL];
    WSBlockHeader *retargetHeader = [retargetMessage.headers lastObject];
    
    // 46367/8
    NSString *hex = @"0202000000cc01970b30d30f3b21edac6371b0ec834e2ee184e3f14208b793860c000000000c2ef7ce31fc1dc873632d5b6fa88c7a2f14b3ce003b6abbb80a661ed230eabe72cce350f0ff0f1c8535916c0002000000021e413f073bbbd6aa30ad5e68934f9da46887f1b2ac0424a935780300000000224525fe49331a807ef4aadf79308154db3c3ed8976f950478abbbb40ffc3e6285cce3506620081cc0fd8a7900";
    WSBuffer *buffer = WSBufferFromHex(hex);
    WSMessageHeaders *message = [[WSMessageHeaders alloc] initWithParameters:self.networkParameters buffer:buffer from:0 available:buffer.length error:NULL];
    WSBlockHeader *previousHeader = message.headers[0];
    WSBlockHeader *header = message.headers[1];
    
    XCTAssertEqualObjects(retargetHeader.blockId, WSHash256FromHex(@"000000000f995096c0f2ee2bd0ab173afcbdda6d062378b534f7092b5baa1148"));
    XCTAssertEqualObjects(previousHeader.blockId, WSHash256FromHex(@"00000000037835a92404acb2f18768a49d4f93685ead30aad6bb3b073f411e02"));
    XCTAssertEqualObjects(header.blockId, WSHash256FromHex(@"0000000004483cef8f6aa5ecd991b82943afdfdee406f74bbf5c14eced56a8bf"));
    
    WSStorableBlock *retargetBlock = [[WSStorableBlock alloc] initWithHeader:retargetHeader transactions:nil height:44352];
    WSStorableBlock *previousBlock = [[WSStorableBlock alloc] initWithHeader:previousHeader transactions:nil height:46367];
    WSStorableBlock *block = [[WSStorableBlock alloc] initWithHeader:header transactions:nil height:46368];
    
    DDLogInfo(@"Retarget: %@", retargetBlock);
    DDLogInfo(@"Previous: %@", previousBlock);
    DDLogInfo(@"Block: %@", block);
    
    XCTAssertTrue([block validateTargetFromPreviousBlock:previousBlock retargetBlock:retargetBlock error:NULL]);
}

- (void)testWrongPartialMerkleTree
{
    NSString *hex = @"0200000001211b08e219191179fa714eda7098f5c31776ab37bf547993667b91af617d36460100";
    WSPartialMerkleTree *pmt = WSPartialMerkleTreeFromHex(hex);
    pmt = nil;
}

@end
